include:
  - remote: 'https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/HEAD/templates/ci-fairy.yml'
  - remote: 'https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/HEAD/templates/alpine.yml'

stages:
  - container prep
  - sanity check
  - build
  - deploy 

# https://docs.gitlab.com/ee/ci/yaml/README.html#switch-between-branch-pipelines-and-merge-request-pipelines
# if a MR is opened: run a detached MR pipeline
# if not, run a regular pipeline
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

.common_variables:
  variables:
    FDO_UPSTREAM_REPO: centos-stream/rhel/src/kernel/documentation
    FDO_DISTRIBUTION_PACKAGES: make git hugo asciidoctor
    # FDO_BASE_IMAGE and FDO_DISTRIBUTION_TAG define hugo version
    FDO_BASE_IMAGE: golang:alpine3.16
    FDO_DISTRIBUTION_TAG: '2023-04-12'

prep alpine container:
  stage: container prep
  extends:
    - .fdo.container-build@alpine
    - .common_variables

#
# Verify that commit messages are as expected, signed-off, etc.
#
check-commit:
  extends:
    - .fdo.ci-fairy
  stage: sanity check
  script:
    - ci-fairy check-commits --branch $CI_DEFAULT_BRANCH --signed-off-by --junit-xml=results.xml --textwidth=100
  except:
    - main@centos-stream/rhel/src/kernel/documentation
  variables:
    GIT_DEPTH: 100
  artifacts:
    reports:
      junit: results.xml

gluser check:
  stage: sanity check
  extends:
    - .fdo.distribution-image@alpine
    - .common_variables
  rules:
    - if: '$CI_MERGE_REQUEST_DIFF_BASE_SHA'
  script:
    - |
      result=0
      for user in $(git diff $CI_MERGE_REQUEST_DIFF_BASE_SHA..$CI_COMMIT_SHA -- info/owners.yaml | sed -n 's/^+[ \t]*gluser:[ \t]*\(.*\)/\1/p'); do
        if ! wget -q -O - "https://gitlab.com/api/v4/users?username=$user" | grep -q username; then
          if [ $result = 0 ]; then
            echo '-----------------------------------------------------------------'
            echo
          fi
          echo " Error: user '$user' is not a valid GitLab user."
          result=1
        fi
      done
      if [ $result = 1 ]; then
        echo
        echo '-----------------------------------------------------------------'
      fi
      exit $result

build:
  stage: build
  extends:
    - .fdo.distribution-image@alpine
    - .common_variables
  script:
    # call make at root directory to do a 'fullbuild'
    - make
  artifacts:
    paths:
      - info/RHMAINTAINERS
      - info/CODEOWNERS
      - info/owners.yaml

.pages:
  stage: build
  extends:
    - .fdo.distribution-image@alpine
    - .common_variables
  variables:
    PAGES_BASE_URL: $CI_PAGES_URL
  script:
    - mkdir -p themes/hugo-geekdoc/
    - wget https://github.com/thegeeklab/hugo-geekdoc/releases/download/v0.38.1/hugo-geekdoc.tar.gz
    - tar xfz hugo-geekdoc.tar.gz -C themes/hugo-geekdoc/

    - echo $CI_PAGES_URL
    - echo "Link to preview:"
    - echo "https://${CI_PROJECT_ROOT_NAMESPACE}.${CI_PAGES_DOMAIN}/${CI_PROJECT_PATH/$CI_PROJECT_ROOT_NAMESPACE/-}/-/jobs/${CI_JOB_ID}/artifacts/public/index.html"
    # fix links with the help of the `ref` shortcode
    - |
      for i in content/docs/*.adoc ; do sed 's/link:\([^.]*\.adoc\)/link:{{< ref \1 >}}/g' -i $i; done

    - hugo --baseURL $PAGES_BASE_URL
  artifacts:
    paths:
    - public

pages CI check:
  # This stage, while still "deploying" a gitlab pages instance, does *not* run
  # on the `main` branch.
  extends:
  - .pages
  before_script:
    - export PROJECT_PATH_WITHOUT_ROOT=${CI_PROJECT_PATH/$CI_PROJECT_ROOT_NAMESPACE/-}
    - export PAGES_BASE_URL="https://${CI_PROJECT_ROOT_NAMESPACE}.${CI_PAGES_DOMAIN}/${PROJECT_PATH_WITHOUT_ROOT}/-/jobs/${CI_JOB_ID}/artifacts/public/"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: never
    - when: on_success

deploy:
  stage: deploy 
  dependencies:
    - build
  extends:
    - .fdo.distribution-image@alpine
    - .common_variables
  script:
    # we've already run 'make' and the artifacts are available.
    # so just deploy code to main
    - git config user.name "Gitlab Runner"
    - git config user.email ""
    - git fetch origin
    - git add info/owners.yaml info/RHMAINTAINERS info/CODEOWNERS
    # make it so that job will not fail if there is nothing to commit
    - git diff-index --quiet HEAD || git commit -m "[Gitlab CI/CD] Automated rebuild of info/*"
    - git push https://gitlab-ci-token:$MAKE_MAINT@gitlab.com/redhat/centos-stream/src/kernel/documentation.git HEAD:main 

  rules:
    - if: '$CI_PROJECT_NAMESPACE == "redhat/centos-stream/src/kernel" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - changes:
      - info/owners.yaml

pages:
  extends:
  - .pages
  stage: deploy 
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "redhat/centos-stream/src/kernel" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

